.pokemons {
  display: grid;
  grid-template-columns: 1fr minmax(auto, 1200px) 1fr;
  padding-top: 20px;
  padding-bottom: 40px;
  justify-content: center;
}
.card__wrapper {
  display: grid;
  grid-column: 2/ 3;
  grid-template-columns: repeat(auto-fit, minmax(auto, 250px));
  column-gap: 20px;
  align-items: stretch;
  row-gap: 20px;
  justify-content: space-between;
  margin: 0 10px;
}
.navigation {
  grid-column: 2/3;
  padding: 5px;
  display: flex;
  justify-content: space-between;
  margin-bottom: 20px;
}
.nav__span {
  display: inline-block;
  padding: 3px 10px;
  width: 50px;
  text-align: center;
  cursor: pointer;
  margin: 3px;
  border: 2px solid white;
  color: white;
}
.nav_activ_span {
  display: inline-block;
  width: 50px;
  text-align: center;
  padding: 3px 10px;
  border: 2px solid white;
  color: white;
  background-color: rgb(255, 0, 179);
  cursor: pointer;
  margin: 3px;
}
.btn_prev {
  background-color: rgb(255, 0, 179);
  border: none;
  text-align: center;
  padding: 5px 10px;
  width: 50px;
  border: 2px solid white;
  color: white;
  cursor: pointer;
  line-height: 19px;
}
.next_btn {
  background-color: rgb(255, 0, 179);
  border: none;
  line-height: 19px;
  text-align: center;
  border: 2px solid white;
  color: white;
  padding: 5px 10px;
  width: 50px;
  cursor: pointer;
}
.paginator {
  display: flex;
  align-items: center;
  color: white;
}
.select__btn {
  margin-left: 10px;
  background-color: rgb(37, 110, 236);
  border: 2px solid white;
  color: white;
  text-align: center;
  padding: 5px 10px;
  padding-bottom: 4px;
  width: 60px;
  cursor: pointer;
}
.search__input {
  padding: 5px;
}
.sorted__btn {
  padding: 6px;
  cursor: pointer;
  background-color: white;
  border: 1px solid black;
  transition: 0.2s;
}
.sorted__btn:focus {
  background-color: rgb(37, 110, 236);
  color: white;
}
.filter {
  width: 300px;
  padding: 10px;
  text-align: center;
}
.filter button{
  width: 200px;
}
.filter__name__wrapper{
  display: flex;
  justify-content: left;
  width: 150px;
  margin: 0 auto;
}
.paginator__adaptive {
  display: none;
}
.paginator__medium {
  display: none;
  color:white
}
@media screen and (max-width: 1000px) {
  .navigation {
    flex-direction: column;
  }
  .paginator {
    margin-bottom: 20px;
  }
  .filter__block {
    margin-bottom: 10px;
  }
  .card__wrapper {
    justify-content: space-evenly;
  }
}
@media screen and (max-width: 840px) {
  .paginator{
    display: none;
  }
  .paginator__medium{
    display: block;
  }
  .filter__block {
    margin: 0 auto;
    margin-top: 10px;
  }
}
@media screen and (max-width: 600px) {
  .paginator__medium{
    display: none;
  }
  
  .paginator__adaptive {
    margin: 0 auto;
    text-align: center;
    margin-bottom: 20px;
    display: block;
    color: white;
  }
  .filter__block {
    margin: 0 auto;
  }
  .paginator {
    display: none;
  }
  .card__wrapper {
    margin: 0 10px;
  }
}
@media screen and (max-width: 440px) {
  .select__btn {
    display: block;
    margin: 0 auto;
    margin-top: 10px;
  }
}
/* const [portion, setPortion] = React.useState();
console.log(page);
const numberOfPages = Math.ceil(props.count / props.maxCards);
const arrPages = [];
for (let i = 1; i <= numberOfPages; i++) arrPages.push(i); */
 /* {arrPages.map((p: number, index) => {
        if (p == 1) {
          return (
            <span>
              <span key={p} className={props.currentPage == p ? style.nav_activ_span : style.nav__span} onClick={() => { props.withGetPokemonsNavigation(props.maxCards, index, p, props.maxCards); setPage(1) }}>{p}</span>
              {page > 6 ? <span>...</span> : null}</span>)
        }
        else if (p > page - 1 && p <= page + 6) {
          return (
            <span key={p} className={props.currentPage == p ? style.nav_activ_span : style.nav__span} onClick={() => { props.withGetPokemonsNavigation(props.maxCards, index, p, props.maxCards); }}>{p}</span>)
        }
        else if (p == arrPages.length - 3 && p < arrPages.length) {
          if (page > arrPages.length - 3) {
            return (
              <span key={p} className={props.currentPage == p ? style.nav_activ_span : style.nav__span} onClick={() => { props.withGetPokemonsNavigation(props.maxCards, index, p, props.maxCards); }}>{p}</span>)
          }
        }
        else if (p == arrPages.length) {
          if (page == arrPages.length - 6) {
            return (
              <span key={p}><span className={props.currentPage == p ? style.nav_activ_span : style.nav__span} onClick={() => { props.withGetPokemonsNavigation(props.maxCards, index, p, props.maxCards); setPage(arrPages.length - 3) }}>{p}</span></span>)
          }
          else
            return (
              <span key={p}><span>...</span><span className={props.currentPage == p ? style.nav_activ_span : style.nav__span} onClick={() => { props.withGetPokemonsNavigation(props.maxCards, index, p, props.maxCards); setPage(arrPages.length - 3) }}>{p}</span></span>)
        }
      })} */